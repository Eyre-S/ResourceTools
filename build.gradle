plugins {
	id 'java'
	id 'maven-publish'
	id 'com.github.gmazzo.buildconfig' version '4.1.2'
}

static Closure mavenRepository (@DelegatesTo(MavenArtifactRepository.class) Closure closure) { closure }
static Action<? extends PasswordCredentials> credentials (Action<? extends PasswordCredentials> action) { action }

var workshopCredentials = credentials { it ->
	it.username = publishMvnRepoUsername
	it.password = publishMvnRepoPassword
}

var workshopReleases = mavenRepository({
	name 'wsReleases'
	url "https://mvn.sukazyo.cc/releases"
	credentials workshopCredentials
})

var workshopSnapshots = mavenRepository({
	name "wsSnapshots"
	url "https://mvn.sukazyo.cc/snapshots"
	credentials workshopCredentials
})

final String proj_group = "cc.sukazyo"
final String proj_archive_name = archive_name
final String proj_package_name = proj_archive_name
final boolean proj_is_snapshot = Boolean.parseBoolean(snapshot)
final String proj_version = version + (proj_is_snapshot ? "-SNAPSHOT" : "")

group proj_group
version proj_version

repositories {
	mavenCentral()
	maven workshopReleases
}

dependencies {
	
	compileOnly 'com.github.spotbugs:spotbugs-annotations:4.8.4'
	
	testImplementation platform("org.junit:junit-bom:5.10.3")
	
}

java {
	withJavadocJar()
	withSourcesJar()
}

test {
	useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
	
	sourceCompatibility = JavaVersion.VERSION_1_9
	targetCompatibility = JavaVersion.VERSION_1_9
	
	options.encoding = "UTF-8"
	
}

tasks.withType(Javadoc).configureEach {
	options.encoding = 'UTF-8'
}

tasks.withType(Jar).configureEach {
	archiveBaseName.set proj_archive_name
}

publishing {
	
	publications {
		release (MavenPublication) {
			artifactId = proj_package_name
			from components.java
		}
	}
	
	repositories {
		maven {
			name 'localArchives'
			url publishMavenLocalDirectory
		}
		if (!proj_is_snapshot)
			maven workshopReleases
		else
			maven workshopSnapshots
	}
	
}
